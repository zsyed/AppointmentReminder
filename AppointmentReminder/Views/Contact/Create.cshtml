@{
	ViewBag.InitModule = "ContactModule";
}

@section Scripts {
	<script src="~/js/contact.js"></script>
}

<h2>Contact - Create</h2>

<div data-ng-controller="ContactCreateController">
	<form name ="createContact" data-ng-submit="saveCreateContact()">

		<div>
			<label>First Name: </label>
			<input required type="text" placeholder="Enter First Name" data-ng-model="contact.FirstName"/>
		</div>
		<div>
			<label>Last Name: </label>
			<input required type="text" placeholder="Enter Last Name" data-ng-model="contact.LastName"/>
		</div>
		<div>
			<label>Email Address: </label>
			<input required type="text" placeholder="Enter Email Address" data-ng-model="contact.EmailAddress"/>
		</div>
		<div>
			<label>Cell Phone Number: </label>
			<input required type="text" placeholder="Enter Phone Number" data-ng-model="contact.PhoneNumber"/>
		</div>
		<div>
			<label>Time Zone: </label>
			<input required type="text" placeholder="Enter Phone Number" data-ng-model="contact.TimeZone"/>
		</div>
		<div>
			<label>Send Email: </label>
			<input required type="checkbox" data-ng-model="contact.SendEmail"/>
		</div>
		<div>
			<label>Send SMS: </label>
			<input required type="checkbox" data-ng-model="contact.SendSMS"/>
		</div>

		<div></div>
		<div>
			<button class="btn btn-primary" type="submit">Create</button>
		</div>
	</form>
</div>





@*@model AppointmentReminder.Models.ContactModel

@{
    ViewBag.Title = "Contact - Create";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>ContactModel</legend>

				@Html.HiddenFor(model => model.ProfileId)

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

		        <div class="editor-label">
            @Html.LabelFor(model => model.TimeZone)
        </div>
		  <div class="editor-field">

		    @(Html.Kendo().ComboBoxFor(model => model.TimeZone)
          .Name("TimeZone")
          .DataTextField("Text")
          .DataValueField("Value")
		  .Placeholder("Select TimeZone...")
          .DataSource(source => {
              source.Read(read =>
              {
                  read.Action("GetTimeZones", "Contact");
              }); 
          })
    )
			  			  @Html.ValidationMessageFor(model => model.TimeZone)
			  </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EmailAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmailAddress)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PhoneNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Active)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Active)
            @Html.ValidationMessageFor(model => model.Active)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SendEmail)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SendEmail)
            @Html.ValidationMessageFor(model => model.SendEmail)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SendSMS)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SendSMS)
            @Html.ValidationMessageFor(model => model.SendSMS)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
